/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.unipar.pdv.desktop.telas;

import br.unipar.pdv.desktop.model.Cliente;
import br.unipar.pdv.desktop.model.ItemVenda;
import br.unipar.pdv.desktop.model.Produto;
import br.unipar.pdv.desktop.model.Venda;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Beatr
 */
public class VendaPanel extends javax.swing.JPanel {

    private List<Produto> listaProduto; 
    private List<Cliente> listaCliente;
    private int proximoIdVenda;
    
    /**
     * Creates new form VendaPanel
     */
    public VendaPanel() {
        initComponents();
        exibirData();
        exibirId();
        exibirListaCliente();
        exibirListaProduto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbValorTotal = new javax.swing.JTextField();
        btFinalizar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        dataField = new javax.swing.JTextField();
        cbCliente = new javax.swing.JComboBox<>();
        lbIdVenda = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txfObservacao = new javax.swing.JTextField();
        btSelecionarCliente = new javax.swing.JButton();
        infoCliente = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        lbTelefone = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        lbEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        lbNome = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        lbIdCliente = new javax.swing.JTextField();
        infoItens = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cbProduto = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txfQuantidade = new javax.swing.JTextField();
        btSelecionarProduto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();

        jButton1.setText("jButton1");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel1.setText("Venda");

        jLabel4.setText("Cliente:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Valor Total:");

        lbValorTotal.setEditable(false);
        lbValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbValorTotalActionPerformed(evt);
            }
        });

        btFinalizar.setText("Finalizar");
        btFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Data:");

        dataField.setEditable(false);
        dataField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataFieldActionPerformed(evt);
            }
        });

        cbCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbIdVenda.setText("jLabel6");
        lbIdVenda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("ID:");

        jLabel6.setText("Observação:");

        btSelecionarCliente.setText("Selecionar");
        btSelecionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionarClienteActionPerformed(evt);
            }
        });

        infoCliente.setBackground(new java.awt.Color(204, 204, 204));
        infoCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel10.setText("Telefone:");

        lbTelefone.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel11.setText("Email:");

        lbEmail.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setText("Nome:");

        lbNome.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel12.setText("Código:");

        lbIdCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout infoClienteLayout = new javax.swing.GroupLayout(infoCliente);
        infoCliente.setLayout(infoClienteLayout);
        infoClienteLayout.setHorizontalGroup(
            infoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(infoClienteLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbEmail))
                    .addGroup(infoClienteLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbNome, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        infoClienteLayout.setVerticalGroup(
            infoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoClienteLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(infoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12)
                    .addComponent(lbIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lbTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(lbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        infoItens.setBackground(new java.awt.Color(204, 204, 204));
        infoItens.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel5.setText("Produto:");

        cbProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Quantidade:");

        txfQuantidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btSelecionarProduto.setText("Selecionar");
        btSelecionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionarProdutoActionPerformed(evt);
            }
        });

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Qtd", "Vl. Un.", "Vl. Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaProdutos);

        javax.swing.GroupLayout infoItensLayout = new javax.swing.GroupLayout(infoItens);
        infoItens.setLayout(infoItensLayout);
        infoItensLayout.setHorizontalGroup(
            infoItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoItensLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(infoItensLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSelecionarProduto)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        infoItensLayout.setVerticalGroup(
            infoItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoItensLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(infoItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(infoItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(btSelecionarProduto)
                        .addComponent(cbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btFinalizar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfObservacao))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbIdVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(infoCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(infoItens, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSelecionarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(dataField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIdVenda)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSelecionarCliente))
                .addGap(18, 18, 18)
                .addComponent(infoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(infoItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txfObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btFinalizar)
                    .addComponent(lbValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarActionPerformed
        salvarVenda();
    }//GEN-LAST:event_btFinalizarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        apagarDados();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btSelecionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionarProdutoActionPerformed
        adicionarProduto();
    }//GEN-LAST:event_btSelecionarProdutoActionPerformed

    private void dataFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataFieldActionPerformed

    private void lbValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbValorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbValorTotalActionPerformed

    private void btSelecionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionarClienteActionPerformed
        selecionarCliente();
    }//GEN-LAST:event_btSelecionarClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btFinalizar;
    private javax.swing.JButton btSelecionarCliente;
    private javax.swing.JButton btSelecionarProduto;
    private javax.swing.JComboBox<String> cbCliente;
    private javax.swing.JComboBox<String> cbProduto;
    private javax.swing.JTextField dataField;
    private javax.swing.JPanel infoCliente;
    private javax.swing.JPanel infoItens;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lbEmail;
    private javax.swing.JTextField lbIdCliente;
    private javax.swing.JLabel lbIdVenda;
    private javax.swing.JTextField lbNome;
    private javax.swing.JTextField lbTelefone;
    private javax.swing.JTextField lbValorTotal;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JTextField txfObservacao;
    private javax.swing.JTextField txfQuantidade;
    // End of variables declaration//GEN-END:variables
    
    private void exibirData() {
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String dateString = dateFormat.format(date);
        dataField.setText(dateString);
    }
    
    private void exibirId() {
        proximoIdVenda++;
        lbIdVenda.setText(String.valueOf(proximoIdVenda));
    }

    private void exibirListaCliente() {
        try {
            URL url = new URL("http://localhost:8080/cliente/all");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();

            BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));

            String inputLine;
            StringBuilder result = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                result.append(inputLine);
            }

            in.close();
            listaCliente = Cliente.unmarshalFromJson(result.toString());

            cbCliente.removeAllItems();

            for (Cliente cliente : listaCliente) {
                cbCliente.addItem(cliente.getNome());
            }
            
            int code = connection.getResponseCode();
            System.out.println("Response code: " + code);
            registroLog("Obtenção de clientes", "Sucesso. Response code: " + code);

            connection.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void exibirListaProduto() {
        try {
            URL url = new URL("http://localhost:8080/produto/all");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();

            BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));

            String inputLine;
            StringBuilder result = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                result.append(inputLine);
            }

            in.close();
            listaProduto = Produto.unmarshalFromJson(result.toString());

            cbProduto.removeAllItems();

            for (Produto produto : listaProduto) {
                cbProduto.addItem(produto.getDescricao());
            }

            int code = connection.getResponseCode();
            System.out.println("Response code: " + code);
            registroLog("Obtenção de produtos", "Sucesso. Response code: " + code);

            connection.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private double calcularTotal() {
        double total = 0.0;
        DefaultTableModel model = (DefaultTableModel) tabelaProdutos.getModel();
        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            Object valorTotalObj = model.getValueAt(i, 4);
            if (valorTotalObj != null) {
                double valorTotal = (double) valorTotalObj;
                total += valorTotal;
            }
        }
        return total;
    }
    
    private void adicionarProduto() {
        Produto produtoSelecionado = listaProduto.get(cbProduto.getSelectedIndex());

        long codigo = produtoSelecionado.getId();
        String descricao = produtoSelecionado.getDescricao();
        double valorUnitario = produtoSelecionado.getValor();
        
        int quantidade = 0;
        quantidade = Integer.parseInt(txfQuantidade.getText());

        double valorTotal = valorUnitario * quantidade;

        DefaultTableModel model = (DefaultTableModel) tabelaProdutos.getModel();
        model.addRow(new Object[]{codigo, descricao, quantidade, valorUnitario, valorTotal});
        
        double total = calcularTotal();
        DecimalFormat df = new DecimalFormat("#.##");
        lbValorTotal.setText(df.format(total));
 
    }
    
    private void registroLog(String status, String tipo) {
         try (BufferedWriter writer = new BufferedWriter(new FileWriter("registros_log.txt", true))) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String dataHora = dateFormat.format(new Date());
            writer.write(dataHora + " - " + tipo + " - " + status);
            writer.newLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void apagarDados() {
        lbValorTotal.setText("");
        txfQuantidade.setText("");
        txfObservacao.setText("");
        lbNome.setText("");
        lbTelefone.setText("");
        lbEmail.setText("");
        lbIdCliente.setText("");

        DefaultTableModel model = (DefaultTableModel) tabelaProdutos.getModel();
        model.setRowCount(0);
    }

    private void salvarVenda() {
        try {
            URL url = new URL("http://localhost:8080/venda");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();

            conn.setRequestMethod("POST");
            conn.setDoOutput(true);
            conn.setRequestProperty("Content-Type", "application/json; utf-8");

            Cliente cliente = new Cliente();
            Long clienteId = Long.valueOf(lbIdCliente.getText());
            cliente.setId(clienteId);
            cliente.setNome(lbNome.getText());
            cliente.setTelefone(lbTelefone.getText());
            cliente.setEmail(lbEmail.getText());

            Venda venda = new Venda();
            Long vendaId = Long.valueOf(lbIdVenda.getText());
            venda.setId(vendaId);
            venda.setObservacao(txfObservacao.getText());
            venda.setTotal(Double.parseDouble(lbValorTotal.getText().replace(",", ".")));
            venda.setCliente(cliente);
            
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            String dateString = dataField.getText();
            Date date = dateFormat.parse(dateString);
            venda.setData(date);
            
            List<ItemVenda> itensVenda = new ArrayList<>();
            for (int i = 0; i < tabelaProdutos.getRowCount(); i++) {   
                int qtd = (int) tabelaProdutos.getValueAt(i, 2);
                double vlUn = Double.parseDouble(tabelaProdutos.getValueAt(i, 3).
                        toString().replace(",", "."));
                double vlTotal = Double.parseDouble(tabelaProdutos.getValueAt(i, 4).toString().
                        replace(",", "."));
                      
                Produto produto = new Produto();
                Long id = (long) tabelaProdutos.getValueAt(i, 0);
                produto.setId(id);

                ItemVenda itemVenda = new ItemVenda();
                itemVenda.setId(i);
                itemVenda.setQuantidade(qtd);
                itemVenda.setValorUnitario(vlUn);
                itemVenda.setValorTotal(vlTotal);
                itemVenda.setProduto(produto);
                itemVenda.setVendaId(venda);
                
                itensVenda.add(itemVenda);
            }    
            venda.setItens(itensVenda);
            
            String jsonInputString = Venda.marshalToJson(venda);  

            try(OutputStream os = conn.getOutputStream()) {
                byte[] input = jsonInputString.getBytes("utf-8");
                os.write(input, 0, input.length);
                System.out.println("salvo");
            }catch(Exception e) {
                e.printStackTrace();
            }
            int cod = conn.getResponseCode();
            conn.disconnect();
            System.out.println("salvo2");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("salvo3");
        }

    }

    private void selecionarCliente() {
        int selectedIndex = cbCliente.getSelectedIndex();
        if (selectedIndex >= 0 && selectedIndex < listaCliente.size()) {
            Cliente clienteSelecionado = listaCliente.get(selectedIndex);

            long codigo = clienteSelecionado.getId();
            String nome = clienteSelecionado.getNome();
            String telefone = clienteSelecionado.getTelefone();
            String email = clienteSelecionado.getEmail();

            lbIdCliente.setText(String.valueOf(codigo));
            lbNome.setText(nome);
            lbTelefone.setText(telefone);
            lbEmail.setText(email);
        }
    }

}
